#!/bin/csh
#+
#OSIRIS library of scripts
#
#NAME
#     osirisOfflineDRP
#
#SYNOPSIS
#     osirisOfflineDRP arg1 mode [-t #] [-m] etc...
#
#DESCRIPTION
#     Starts the OSIRIS DRP in an offline mode for FRP work during the night
#          or data reduction after a run
#
#OPTIONS
#     -t #
#          ID number to attach to all script generated errors, warnings, and
#          questions that are passed to the OGS.  The ID number is separated
#          from the rest of the message with a ";".
#
#     -m
#          simulate calls to RPC servers.  during simulated calls, the 
#          command is echoed (instead of being executed).
#
#     others?
#
#EXAMPLES
#     osirisOfflineDRP junk1 -t 123
#          What would happen?
#
#ENVIRONMENT VARIABLES
#     OSIRIS_ALTERNATE_DRF_QUEUE_DIR
#
#FILES
#     Assumes links set by osirisSetupUser/osirisSetupNight exist like:
#       /home/$USER/osiris/spec_frp/DRFs
#
#SERVERS & KEYWORDS
#     list of the servers and keywords used, for example:
#
#     service = osiris
#          keywords: sfilter/ifilter, sscale
#
#SCRIPTS CALLED
#     list of the scripts called by this script, for example:
#
#     help, syncheck
#
#EXIT STATUS
#     0 - normal exit, no error
#     1 - script aborted by an interrupt
#     2 - syncheck error
#     3 - error parsing command line input
#     other errors...
#
#SEE ALSO
#     ???
#-
#
# Modification History:
# 20041124 - MB: Initial version created
#

# Boiler plate for "-h" support for command autohelp.

if ("$1" == "-h") then
    help $0 | more
    exit $status
endif

# Set up to trap interrupts (Ctrl-C, etc.)
onintr abort

# Set default variable values
set cmdpre = ""
set cmdsuf = ""
set idnum = 0
set defaultroot = "${HOME}/osiris/"
set defaultsub = "spec_frp/DRFs"
set defaultdir = ${defaultroot}${defaultsub}
set runhost = "osiris-drp"
set waittime = 3

# Check for flags
set noglob
while ($#argv != 0)
##echo "${0} ${mode}: Checking ${1}..."
    # convert to lower case for easier matching
    set var = `echo $1 | /usr/bin/tr "[A-Z]" "[a-z]"`
    switch ($var)
	case -t:
	    set idnum = $2
            shift
	    breaksw
	case -m
	    set sim
	    set cmdpre = "echo ${0}: sim:"
	    set cmdsuf = "-m"
	    breaksw
	case -d*:
            set dir = $2
            # verify this is a valid directory
            if ( -d $dir && -w $dir ) then
            # valid, continue on...
           else
             echo "$dir either does not exist or is not writeable for $USER."
             unset dir
           endif
            shift
            breaksw
	case -r*:
          set runhost = $2
          shift
          breaksw
	default:
	    echo "${0}: Invalid command line flag $1 specified."
	    echo "${0}: Usage: $0 [-t #] [-m]"
	    # set the error code for an error with command line input
	    exit 3
	    breaksw
    endsw
    shift
end
unset noglob

# Was a directory specified?
if ( ! $?dir ) then
  if ( -d $defaultdir ) then
    echo "Using $defaultdir for DRFs"
    set dir = $defaultdir
  else
    echo "$defaultdir is missing; trying latest directory"
    set latestroot = `ls -1 $OSIRIS_DATA_ROOT/$USER | awk '/^[01][0-9][01][0-9][0-3][0-9]/ {print}' | tail -1 | cut -c1-6`
    osirisSetupUser $latestroot
    set dir = $OSIRIS_DATA_ROOT/$USER/$latestroot/SPEC/FRP/DRFs
  endif
endif  

# Likely will have to pass this, but just in case...
setenv OSIRIS_ALTERNATE_DRF_QUEUE_DIR $dir
# need to set this so osirisDropDRF works...
setenv DRF_QUEUE_DIR $dir

# start odrfgui
osiris start odrfgui -C odrfgui_frp_cfg.xml &
sleep $waittime
# start QLOOK2
osiris start fql2 &
sleep $waittime
# start drp backbone
# unable to pass ALTERNATE envar 
# osiris start offline_drp -H $runhost
ssh -X $runhost run_offline_drp $dir &
sleep $waittime

goto done

abort:
# Block of code to handle interrupts.
exit 1

done:
# is there anything that needs to go here?
exit
